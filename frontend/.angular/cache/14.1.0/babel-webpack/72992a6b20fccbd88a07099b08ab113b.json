{"ast":null,"code":"import _classCallCheck from \"C:/Users/boina/Desktop/Finalproject/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/boina/Desktop/Finalproject/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { HttpEvent, HttpHandler, HttpRequest } from \"@angular/common/http\";\nimport { UserService } from \"../services/user.service\";\nimport { throwError } from \"rxjs\";\nimport { catchError } from \"rxjs/operators\";\nimport { Router } from \"@angular/router\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/user.service\";\nimport * as i2 from \"@angular/router\";\nexport var ErrorInterceptor = /*#__PURE__*/(function () {\n  var ErrorInterceptor = /*#__PURE__*/function () {\n    function ErrorInterceptor(userService, router) {\n      _classCallCheck(this, ErrorInterceptor);\n\n      this.userService = userService;\n      this.router = router;\n    }\n\n    _createClass(ErrorInterceptor, [{\n      key: \"intercept\",\n      value: function intercept(request, next) {\n        var _this = this;\n\n        return next.handle(request).pipe(catchError(function (err) {\n          if (err.status === 401) {\n            // auto logout if 401 response returned from api\n            _this.userService.logout();\n\n            _this.router.navigate(['/login']);\n          }\n\n          var error = err.error || err.statusText;\n          return throwError(error);\n        }));\n      }\n    }]);\n\n    return ErrorInterceptor;\n  }();\n\n  ErrorInterceptor.ɵfac = function ErrorInterceptor_Factory(t) {\n    return new (t || ErrorInterceptor)(i0.ɵɵinject(i1.UserService), i0.ɵɵinject(i2.Router));\n  };\n\n  ErrorInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ErrorInterceptor,\n    factory: ErrorInterceptor.ɵfac,\n    providedIn: 'root'\n  });\n  return ErrorInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module"}