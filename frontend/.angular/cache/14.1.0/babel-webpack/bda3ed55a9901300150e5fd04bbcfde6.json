{"ast":null,"code":"import _classCallCheck from \"C:/Users/boina/Desktop/Finalproject/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/boina/Desktop/Finalproject/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { UserService } from \"../services/user.service\";\nimport { HttpEvent, HttpHandler, HttpRequest } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/user.service\";\nexport var JwtInterceptor = /*#__PURE__*/(function () {\n  var JwtInterceptor = /*#__PURE__*/function () {\n    function JwtInterceptor(userService) {\n      _classCallCheck(this, JwtInterceptor);\n\n      this.userService = userService;\n    }\n\n    _createClass(JwtInterceptor, [{\n      key: \"intercept\",\n      value: function intercept(request, next) {\n        // add authorization header with jwt token if available\n        var currentUser = this.userService.currentUserValue;\n\n        if (currentUser && currentUser.token) {\n          request = request.clone({\n            setHeaders: {\n              Authorization: \"\".concat(currentUser.type, \" \").concat(currentUser.token),\n              'Content-Type': 'application/json'\n            }\n          });\n        }\n\n        return next.handle(request);\n      }\n    }]);\n\n    return JwtInterceptor;\n  }();\n\n  JwtInterceptor.ɵfac = function JwtInterceptor_Factory(t) {\n    return new (t || JwtInterceptor)(i0.ɵɵinject(i1.UserService));\n  };\n\n  JwtInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: JwtInterceptor,\n    factory: JwtInterceptor.ɵfac,\n    providedIn: 'root'\n  });\n  return JwtInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module"}